# 🧪 测试环境 - Docker Compose 配置
# 单机部署，所有组件单实例，快速启动，适合功能测试和集成测试

version: '3.8'

services:
  # 核心数据库 - MySQL
  mysql-testing:
    image: mysql:8.0
    container_name: mysql-testing
    environment:
      MYSQL_ROOT_PASSWORD: testing_root_pass_2024
      MYSQL_DATABASE: platform_testing
      MYSQL_USER: platform_user
      MYSQL_PASSWORD: testing_user_pass_2024
    ports:
      - "3306:3306"
    volumes:
      - mysql_testing_data:/var/lib/mysql
      - ../../database/schema/init:/docker-entrypoint-initdb.d:ro
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - platform-testing
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 缓存数据库 - Redis
  redis-testing:
    image: redis:7-alpine
    container_name: redis-testing
    command: redis-server --requirepass testing_redis_pass_2024 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_testing_data:/data
    networks:
      - platform-testing
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 20s
      retries: 10

  # 文档数据库 - MongoDB
  mongodb-testing:
    image: mongo:7
    container_name: mongodb-testing
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_admin
      MONGO_INITDB_ROOT_PASSWORD: testing_mongo_pass_2024
      MONGO_INITDB_DATABASE: platform_testing
    ports:
      - "27017:27017"
    volumes:
      - mongodb_testing_data:/data/db
      - ./config/mongodb/mongod.conf:/etc/mongod.conf:ro
    networks:
      - platform-testing
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      timeout: 20s
      retries: 10

  # 服务注册中心 - Nacos
  nacos-testing:
    image: nacos/nacos-server:v2.3.0
    container_name: nacos-testing
    environment:
      MODE: standalone
      NACOS_AUTH_ENABLE: true
      NACOS_AUTH_TOKEN: testing_nacos_token_2024
      NACOS_AUTH_IDENTITY_KEY: testing_nacos_identity
      NACOS_AUTH_IDENTITY_VALUE: testing_nacos_value
      JVM_XMS: 512m
      JVM_XMX: 512m
    ports:
      - "8848:8848"
      - "9848:9848"
    volumes:
      - nacos_testing_logs:/home/nacos/logs
      - nacos_testing_data:/home/nacos/data
    networks:
      - platform-testing
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/readiness"]
      timeout: 20s
      retries: 10

  # 消息队列 - RabbitMQ
  rabbitmq-testing:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-testing
    environment:
      RABBITMQ_DEFAULT_USER: rabbit_admin
      RABBITMQ_DEFAULT_PASS: testing_rabbit_pass_2024
      RABBITMQ_DEFAULT_VHOST: platform_testing
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_testing_data:/var/lib/rabbitmq
      - ./config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - platform-testing
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      timeout: 20s
      retries: 10

  # 消息队列 - Kafka + Zookeeper
  zookeeper-testing:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-testing
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: WARN
    volumes:
      - zookeeper_testing_data:/var/lib/zookeeper/data
      - zookeeper_testing_logs:/var/lib/zookeeper/log
    networks:
      - platform-testing
    restart: unless-stopped

  kafka-testing:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-testing
    depends_on:
      - zookeeper-testing
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-testing:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-testing:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
    volumes:
      - kafka_testing_data:/var/lib/kafka/data
    networks:
      - platform-testing
    restart: unless-stopped
    healthcheck:
      test: kafka-broker-api-versions --bootstrap-server localhost:9092
      timeout: 20s
      retries: 10

  # 消息队列 - RocketMQ
  rocketmq-nameserver-testing:
    image: apache/rocketmq:5.1.4
    container_name: rocketmq-nameserver-testing
    ports:
      - "9876:9876"
    environment:
      JAVA_OPT: "-Duser.home=/home/rocketmq -Xms256m -Xmx256m"
    command: ["sh", "mqnamesrv"]
    volumes:
      - rocketmq_nameserver_logs:/home/rocketmq/logs
    networks:
      - platform-testing
    restart: unless-stopped

  rocketmq-broker-testing:
    image: apache/rocketmq:5.1.4
    container_name: rocketmq-broker-testing
    depends_on:
      - rocketmq-nameserver-testing
    ports:
      - "10911:10911"
      - "10912:10912"
    environment:
      NAMESRV_ADDR: "rocketmq-nameserver-testing:9876"
      JAVA_OPT: "-Duser.home=/home/rocketmq -Xms256m -Xmx256m"
    command: ["sh", "mqbroker", "-c", "/home/rocketmq/rocketmq-5.1.4/conf/broker.conf"]
    volumes:
      - rocketmq_broker_logs:/home/rocketmq/logs
      - rocketmq_broker_data:/home/rocketmq/store
      - ./config/rocketmq/broker.conf:/home/rocketmq/rocketmq-5.1.4/conf/broker.conf:ro
    networks:
      - platform-testing
    restart: unless-stopped

  # 监控系统 - Prometheus
  prometheus-testing:
    image: prom/prometheus:v2.45.0
    container_name: prometheus-testing
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.testing.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_testing_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - platform-testing
    restart: unless-stopped

  # 监控可视化 - Grafana
  grafana-testing:
    image: grafana/grafana:10.0.0
    container_name: grafana-testing
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: testing_grafana_pass_2024
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_testing_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - platform-testing
    restart: unless-stopped
    depends_on:
      - prometheus-testing

  # 反向代理 - Nginx
  nginx-testing:
    image: nginx:1.25-alpine
    container_name: nginx-testing
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.testing.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_testing_logs:/var/log/nginx
    networks:
      - platform-testing
    restart: unless-stopped
    depends_on:
      - platform-api-testing
      - platform-web-testing

  # 平台API服务
  platform-api-testing:
    build:
      context: ../..
      dockerfile: platform-application/platform-external-api-service/Dockerfile
    container_name: platform-api-testing
    environment:
      SPRING_PROFILES_ACTIVE: testing
      NACOS_SERVER_ADDR: nacos-testing:8848
      MYSQL_URL: jdbc:mysql://mysql-testing:3306/platform_testing?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
      MYSQL_USERNAME: platform_user
      MYSQL_PASSWORD: testing_user_pass_2024
      REDIS_HOST: redis-testing
      REDIS_PASSWORD: testing_redis_pass_2024
      MONGODB_HOST: mongodb-testing
      MONGODB_USERNAME: mongo_admin
      MONGODB_PASSWORD: testing_mongo_pass_2024
      RABBITMQ_HOST: rabbitmq-testing
      RABBITMQ_USERNAME: rabbit_admin
      RABBITMQ_PASSWORD: testing_rabbit_pass_2024
      KAFKA_SERVERS: kafka-testing:29092
      ROCKETMQ_NAMESERVER: rocketmq-nameserver-testing:9876
    ports:
      - "8080:8080"
    volumes:
      - platform_api_logs:/app/logs
    networks:
      - platform-testing
    restart: unless-stopped
    depends_on:
      - mysql-testing
      - redis-testing
      - mongodb-testing
      - nacos-testing
      - rabbitmq-testing
      - kafka-testing
      - rocketmq-nameserver-testing
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      timeout: 20s
      retries: 10

  # 前端Web服务
  platform-web-testing:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: platform-web-testing
    environment:
      NODE_ENV: testing
      API_BASE_URL: http://platform-api-testing:8080
    ports:
      - "8081:80"
    volumes:
      - platform_web_logs:/var/log/nginx
    networks:
      - platform-testing
    restart: unless-stopped
    depends_on:
      - platform-api-testing

# 网络配置
networks:
  platform-testing:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷配置
volumes:
  mysql_testing_data:
  redis_testing_data:
  mongodb_testing_data:
  nacos_testing_logs:
  nacos_testing_data:
  rabbitmq_testing_data:
  zookeeper_testing_data:
  zookeeper_testing_logs:
  kafka_testing_data:
  rocketmq_nameserver_logs:
  rocketmq_broker_logs:
  rocketmq_broker_data:
  prometheus_testing_data:
  grafana_testing_data:
  nginx_testing_logs:
  platform_api_logs:
  platform_web_logs: 