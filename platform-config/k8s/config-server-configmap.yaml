apiVersion: v1
kind: ConfigMap
metadata:
  name: config-repository
  namespace: platform
  labels:
    app: config-server
data:
  # 公共配置
  application.yml: |
    # 全局公共配置
    spring:
      datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        hikari:
          minimum-idle: 5
          maximum-pool-size: 20
          auto-commit: true
          idle-timeout: 30000
          pool-name: DatebookHikariCP
          max-lifetime: 1800000
          connection-timeout: 30000
          connection-test-query: SELECT 1
      jpa:
        hibernate:
          ddl-auto: none
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MySQL8Dialect
            format_sql: true
      redis:
        timeout: 3000ms
        lettuce:
          pool:
            max-active: 20
            max-idle: 8
            min-idle: 0
            max-wait: -1ms
      jackson:
        time-zone: Asia/Shanghai
        date-format: yyyy-MM-dd HH:mm:ss
        serialization:
          write-dates-as-timestamps: false
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: when-authorized
    logging:
      pattern:
        console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{50}] - %msg%n'
        file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{50}] - %msg%n'
      level:
        com.platform: INFO
        org.springframework: WARN
        org.hibernate: WARN
    platform:
      common:
        timezone: Asia/Shanghai
        charset: UTF-8
        version: 1.0.0
      security:
        jwt:
          secret: ${JWT_SECRET:platform-jwt-secret-key-2024}
          expiration: 86400
          refresh-expiration: 604800
      rate-limit:
        default-capacity: 100
        default-tokens: 10
        default-seconds: 1

  # 开发环境配置
  application-dev.yml: |
    spring:
      datasource:
        url: jdbc:mysql://${DB_HOST:mysql-service}:${DB_PORT:3306}/${DB_NAME:platform_dev}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: ${DB_USERNAME:root}
        password: ${DB_PASSWORD:123456}
        hikari:
          maximum-pool-size: 10
      jpa:
        show-sql: true
        hibernate:
          ddl-auto: update
      redis:
        host: ${REDIS_HOST:redis-service}
        port: ${REDIS_PORT:6379}
        password: ${REDIS_PASSWORD:}
        database: 0
      rabbitmq:
        host: ${RABBITMQ_HOST:rabbitmq-service}
        port: ${RABBITMQ_PORT:5672}
        username: ${RABBITMQ_USERNAME:guest}
        password: ${RABBITMQ_PASSWORD:guest}
        virtual-host: /
      cloud:
        nacos:
          discovery:
            server-addr: ${NACOS_SERVER_ADDR:nacos-service:8848}
            namespace: ${NACOS_NAMESPACE:dev}
            group: ${NACOS_GROUP:DEFAULT_GROUP}
          config:
            server-addr: ${NACOS_SERVER_ADDR:nacos-service:8848}
            namespace: ${NACOS_NAMESPACE:dev}
            group: ${NACOS_GROUP:DEFAULT_GROUP}
    logging:
      level:
        com.platform: DEBUG
        org.springframework: INFO
        org.hibernate: INFO
        org.springframework.web: DEBUG
      file:
        path: /app/logs/dev
    platform:
      env: dev
      debug: true
      database:
        show-sql: true
        format-sql: true
      cache:
        type: redis
        ttl: 3600
      file:
        upload-path: /app/uploads/dev
        max-size: 10MB
        allowed-types: jpg,jpeg,png,gif,pdf,doc,docx,xls,xlsx
      mq:
        type: rabbitmq
        auto-ack: false
        retry:
          max-attempts: 3
          initial-interval: 1000
      external:
        timeout: 30000
        retry: 3

  # 测试环境配置
  application-test.yml: |
    spring:
      datasource:
        url: jdbc:mysql://${DB_HOST:mysql-cluster-service}:${DB_PORT:3306}/${DB_NAME:platform_test}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: ${DB_USERNAME:platform_user}
        password: ${DB_PASSWORD:platform_test_2024}
        hikari:
          maximum-pool-size: 15
      jpa:
        show-sql: false
        hibernate:
          ddl-auto: validate
      redis:
        cluster:
          nodes: ${REDIS_CLUSTER_NODES:redis-cluster-1:6379,redis-cluster-2:6379,redis-cluster-3:6379}
          max-redirects: 3
        password: ${REDIS_PASSWORD:redis_test_2024}
        database: 1
      rabbitmq:
        addresses: ${RABBITMQ_ADDRESSES:rabbitmq-cluster-1:5672,rabbitmq-cluster-2:5672}
        username: ${RABBITMQ_USERNAME:platform}
        password: ${RABBITMQ_PASSWORD:rabbitmq_test_2024}
        virtual-host: /test
      cloud:
        nacos:
          discovery:
            server-addr: ${NACOS_SERVER_ADDR:nacos-cluster:8848}
            namespace: ${NACOS_NAMESPACE:test}
            group: ${NACOS_GROUP:TEST_GROUP}
          config:
            server-addr: ${NACOS_SERVER_ADDR:nacos-cluster:8848}
            namespace: ${NACOS_NAMESPACE:test}
            group: ${NACOS_GROUP:TEST_GROUP}
    logging:
      level:
        com.platform: INFO
        org.springframework: WARN
        org.hibernate: WARN
        org.springframework.web: INFO
      file:
        path: /app/logs/test
    platform:
      env: test
      debug: false
      database:
        show-sql: false
        format-sql: false
      cache:
        type: redis-cluster
        ttl: 7200
      file:
        upload-path: /app/uploads/test
        max-size: 50MB
        allowed-types: jpg,jpeg,png,gif,pdf,doc,docx,xls,xlsx,txt
      mq:
        type: rabbitmq-cluster
        auto-ack: false
        retry:
          max-attempts: 5
          initial-interval: 2000
      external:
        timeout: 60000
        retry: 5
      test:
        mock-enabled: true
        data-reset-enabled: true
        performance-test: true

  # 生产环境配置
  application-pub.yml: |
    spring:
      datasource:
        url: jdbc:mysql://${DB_HOST:mysql-prod-cluster}:${DB_PORT:3306}/${DB_NAME:platform_prod}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: ${DB_USERNAME:platform_prod}
        password: ${DB_PASSWORD:ENC(platform_prod_encrypted_password)}
        hikari:
          maximum-pool-size: 50
          minimum-idle: 10
      jpa:
        show-sql: false
        hibernate:
          ddl-auto: none
      redis:
        cluster:
          nodes: ${REDIS_CLUSTER_NODES:redis-prod-1:6379,redis-prod-2:6379,redis-prod-3:6379,redis-prod-4:6379,redis-prod-5:6379,redis-prod-6:6379}
          max-redirects: 3
        password: ${REDIS_PASSWORD:ENC(redis_prod_encrypted_password)}
        database: 0
        lettuce:
          pool:
            max-active: 50
            max-idle: 20
      rabbitmq:
        addresses: ${RABBITMQ_ADDRESSES:rabbitmq-prod-1:5672,rabbitmq-prod-2:5672,rabbitmq-prod-3:5672}
        username: ${RABBITMQ_USERNAME:platform_prod}
        password: ${RABBITMQ_PASSWORD:ENC(rabbitmq_prod_encrypted_password)}
        virtual-host: /prod
        connection-timeout: 30000
      cloud:
        nacos:
          discovery:
            server-addr: ${NACOS_SERVER_ADDR:nacos-prod-cluster:8848}
            namespace: ${NACOS_NAMESPACE:prod}
            group: ${NACOS_GROUP:PROD_GROUP}
          config:
            server-addr: ${NACOS_SERVER_ADDR:nacos-prod-cluster:8848}
            namespace: ${NACOS_NAMESPACE:prod}
            group: ${NACOS_GROUP:PROD_GROUP}
    logging:
      level:
        com.platform: WARN
        org.springframework: ERROR
        org.hibernate: ERROR
        org.springframework.web: WARN
      file:
        path: /app/logs/prod
        max-size: 100MB
        max-history: 30
    platform:
      env: prod
      debug: false
      database:
        show-sql: false
        format-sql: false
        read-only-routing: true
      cache:
        type: redis-cluster
        ttl: 86400
      file:
        upload-path: /app/uploads/prod
        max-size: 100MB
        allowed-types: jpg,jpeg,png,gif,pdf,doc,docx,xls,xlsx,txt
        cdn-enabled: true
      mq:
        type: rabbitmq-cluster
        auto-ack: false
        retry:
          max-attempts: 10
          initial-interval: 5000
      external:
        timeout: 30000
        retry: 3
        circuit-breaker: true
      security:
        encryption-enabled: true
        audit-enabled: true
        rate-limit-enabled: true
      monitoring:
        metrics-enabled: true
        tracing-enabled: true
        alerting-enabled: true 