server:
  port: 8080

spring:
  application:
    name: platform-gateway
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
        namespace: ${NACOS_NAMESPACE:}
        group: DEFAULT_GROUP
      config:
        server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
        namespace: ${NACOS_NAMESPACE:}
        group: DEFAULT_GROUP
        file-extension: yml
        refresh-enabled: true
    
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      
      routes:
        # 配置中心服务路由
        - id: config-service
          uri: lb://platform-config
          predicates:
            - Path=/config/**
          filters:
            - name: CircuitBreaker
              args:
                name: config-service-cb
                fallbackUri: forward:/fallback/config
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        
        # 用户管理服务路由（待开发）
        - id: user-service
          uri: lb://platform-user
          predicates:
            - Path=/api/users/**
          filters:
            - name: AuthenticationFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                redis-rate-limiter.requestedTokens: 1
        
        # API文档路由
        - id: api-docs
          uri: lb://platform-config
          predicates:
            - Path=/v3/api-docs/**
          filters:
            - name: RewritePath
              args:
                regexp: /v3/api-docs/(?<segment>.*)
                replacement: /v3/api-docs/${segment}

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 1
          time-between-eviction-runs: 10s

# 网关安全配置
security:
  jwt:
    secret: ${JWT_SECRET:platform-gateway-secret-key-2024}
    expiration: ${JWT_EXPIRATION:86400}
  
  # 白名单路径（不需要认证）
  whitelist:
    paths:
      - /actuator/**
      - /v3/api-docs/**
      - /swagger-ui/**
      - /webjars/**
      - /config/health
      - /fallback/**

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      sla:
        http.server.requests: 1ms,5ms,10ms,25ms,50ms,100ms,200ms,500ms,1s,2s,5s,10s

# 断路器配置
resilience4j:
  circuitbreaker:
    instances:
      config-service-cb:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
      user-service-cb:
        sliding-window-size: 15
        minimum-number-of-calls: 8
        failure-rate-threshold: 60
        wait-duration-in-open-state: 15s

# 日志配置
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: INFO
    io.netty: INFO
  pattern:
    console: '%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}'

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev
  
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
      config:
        server-addr: localhost:8848
  
  data:
    redis:
      host: localhost
      password: redispass

logging:
  level:
    com.platform.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG

---
# 测试环境配置
spring:
  config:
    activate:
      on-profile: test
  
  cloud:
    nacos:
      discovery:
        server-addr: nacos:8848
      config:
        server-addr: nacos:8848
  
  data:
    redis:
      host: redis
      password: redispass

---
# 生产环境配置
spring:
  config:
    activate:
      on-profile: prod
  
  cloud:
    nacos:
      discovery:
        server-addr: nacos:8848
      config:
        server-addr: nacos:8848
  
  data:
    redis:
      host: redis
      password: redispass

logging:
  level:
    root: INFO
    com.platform.gateway: INFO 