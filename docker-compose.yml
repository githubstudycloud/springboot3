version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: project-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: mydb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
      TZ: Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+08:00
    networks:
      - app-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: project-redis
    restart: unless-stopped
    ports:
      - "6379:6379"  
    command: redis-server --appendonly yes --requirepass redispass
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Spring Boot 后端应用
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: project-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: mydb
      DB_USERNAME: appuser
      DB_PASSWORD: apppass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redispass
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  # Vue 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: project-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: project-nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  # Adminer 数据库管理工具 (可选)
  adminer:
    image: adminer
    container_name: project-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - app-network
    profiles:
      - dev

  # Redis Commander (可选)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: project-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:redispass
    depends_on:
      - redis
    networks:
      - app-network
    profiles:
      - dev

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge 