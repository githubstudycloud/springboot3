server:
  port: 8080

spring:
  application:
    name: platform-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        namespace: public
        group: DEFAULT_GROUP
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        namespace: ${spring.cloud.nacos.discovery.namespace}
        group: ${spring.cloud.nacos.discovery.group}
        file-extension: yaml
        refresh-enabled: true
        shared-configs:
          - data-id: common-config.yaml
            group: DEFAULT_GROUP
            refresh: true
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能
          lower-case-service-id: true # 使用小写服务名
      routes:
        # 服务路由示例
        - id: platform-registry
          uri: lb://platform-registry
          predicates:
            - Path=/registry/**
          filters:
            - StripPrefix=0
        # 此处会根据实际服务动态添加更多路由
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 100 # 令牌桶填充速率
            redis-rate-limiter.burstCapacity: 200 # 令牌桶容量
            rate-limiter: "#{@defaultRedisRateLimiter}"
            key-resolver: "#{@ipKeyResolver}"
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,INTERNAL_SERVER_ERROR
            methods: GET,POST
            backoff:
              firstBackoff: 10ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
      httpclient:
        connect-timeout: 5000
        response-timeout: 60s
        
  # Redis配置
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      timeout: 10s
      
# 熔断器配置
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 100
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 10
        automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s
        
# 监控端点配置
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
