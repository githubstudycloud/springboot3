apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: platform-data
data:
  my.cnf: |
    [mysqld]
    character-set-server=utf8mb4
    collation-server=utf8mb4_unicode_ci
    default-time-zone=+8:00
    max_connections=1000
    
    # InnoDB设置
    innodb_buffer_pool_size=256M
    innodb_log_file_size=64M
    innodb_flush_log_at_trx_commit=2
    
    # 优化设置
    query_cache_size=64M
    query_cache_type=1
    
    # 复制设置
    server-id=1
    log-bin=mysql-bin
    binlog_format=ROW
    
    # 慢查询日志
    slow_query_log=1
    long_query_time=2
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: platform-data
type: Opaque
data:
  root-password: cGFzc3dvcmQ= # base64编码的密码
  user-password: dXNlcnBhc3M= # base64编码的密码
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: platform-data
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql
  selector:
    app: mysql
  clusterIP: None # Headless服务
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-read
  namespace: platform-data
  labels:
    app: mysql
    readonly: "true"
spec:
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: platform-data
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  replicas: 3
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mysql
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: mysql
        image: mysql:latest
        args:
        - "--defaults-file=/etc/mysql/my.cnf"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: root-password
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        - name: config
          mountPath: /etc/mysql/my.cnf
          subPath: my.cnf
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        readinessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysql -u root -p$MYSQL_ROOT_PASSWORD -e "SELECT 1"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysqladmin ping -u root -p$MYSQL_ROOT_PASSWORD
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: config
        configMap:
          name: mysql-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "standard" # 根据您的环境调整
      resources:
        requests:
          storage: 10Gi
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mysql-pdb
  namespace: platform-data
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: mysql
