<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.framework.excel.mapper.ModelMapper">

    <resultMap id="BaseResultMap" type="com.framework.excel.entity.Model">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="BIGINT"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="category_name" property="categoryName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        m.id, m.code, m.name, m.category_id, m.description, m.version, m.status, 
        m.create_time, m.update_time
    </sql>

    <sql id="Join_Column_List">
        m.id, m.code, m.name, m.category_id, m.description, m.version, m.status, 
        m.create_time, m.update_time, mc.name as category_name
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Join_Column_List"/>
        FROM model m
        LEFT JOIN model_category mc ON m.category_id = mc.id
        WHERE m.id = #{id}
    </select>

    <select id="selectByCode" resultMap="BaseResultMap">
        SELECT <include refid="Join_Column_List"/>
        FROM model m
        LEFT JOIN model_category mc ON m.category_id = mc.id
        WHERE m.code = #{code}
    </select>

    <select id="selectByName" resultMap="BaseResultMap">
        SELECT <include refid="Join_Column_List"/>
        FROM model m
        LEFT JOIN model_category mc ON m.category_id = mc.id
        WHERE m.name = #{name}
    </select>

    <select id="selectByConditions" resultMap="BaseResultMap">
        SELECT <include refid="Join_Column_List"/>
        FROM model m
        LEFT JOIN model_category mc ON m.category_id = mc.id
        <where>
            <if test="conditions.id != null">
                AND m.id = #{conditions.id}
            </if>
            <if test="conditions.code != null and conditions.code != ''">
                AND m.code = #{conditions.code}
            </if>
            <if test="conditions.name != null and conditions.name != ''">
                AND m.name LIKE CONCAT('%', #{conditions.name}, '%')
            </if>
            <if test="conditions.categoryId != null">
                AND m.category_id = #{conditions.categoryId}
            </if>
            <if test="conditions.status != null">
                AND m.status = #{conditions.status}
            </if>
        </where>
        ORDER BY m.id DESC
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Join_Column_List"/>
        FROM model m
        LEFT JOIN model_category mc ON m.category_id = mc.id
        ORDER BY m.id DESC
    </select>

    <insert id="insert" parameterType="com.framework.excel.entity.Model" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO model (
            code, name, category_id, description, version, status, create_time, update_time
        ) VALUES (
            #{code}, #{name}, #{categoryId}, #{description}, #{version}, #{status}, 
            NOW(), NOW()
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO model (
            code, name, category_id, description, version, status, create_time, update_time
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.code}, #{item.name}, #{item.categoryId}, #{item.description}, 
             #{item.version}, #{item.status}, NOW(), NOW())
        </foreach>
    </insert>

    <update id="update" parameterType="com.framework.excel.entity.Model">
        UPDATE model SET
            code = #{code},
            name = #{name},
            category_id = #{categoryId},
            description = #{description},
            version = #{version},
            status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateByCode" parameterType="com.framework.excel.entity.Model">
        UPDATE model SET
            name = #{name},
            category_id = #{categoryId},
            description = #{description},
            version = #{version},
            status = #{status},
            update_time = NOW()
        WHERE code = #{code}
    </update>

    <update id="updateByName" parameterType="com.framework.excel.entity.Model">
        UPDATE model SET
            code = #{code},
            category_id = #{categoryId},
            description = #{description},
            version = #{version},
            status = #{status},
            update_time = NOW()
        WHERE name = #{name}
    </update>

    <delete id="deleteById">
        DELETE FROM model WHERE id = #{id}
    </delete>

    <delete id="deleteByCode">
        DELETE FROM model WHERE code = #{code}
    </delete>

    <select id="countByConditions" resultType="int">
        SELECT COUNT(1) FROM model m
        <where>
            <if test="conditions.id != null">
                AND m.id = #{conditions.id}
            </if>
            <if test="conditions.code != null and conditions.code != ''">
                AND m.code = #{conditions.code}
            </if>
            <if test="conditions.name != null and conditions.name != ''">
                AND m.name LIKE CONCAT('%', #{conditions.name}, '%')
            </if>
            <if test="conditions.categoryId != null">
                AND m.category_id = #{conditions.categoryId}
            </if>
            <if test="conditions.status != null">
                AND m.status = #{conditions.status}
            </if>
        </where>
    </select>

</mapper>